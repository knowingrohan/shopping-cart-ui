!function(n){var e={};function r(t){if(e[t])return e[t].exports;var o=e[t]={i:t,l:!1,exports:{}};return n[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=n,r.c=e,r.d=function(n,e,t){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)r.d(t,o,function(e){return n[e]}.bind(null,o));return t},r.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="",r(r.s=0)}([function(n,e,r){"use strict";r(1),r(6);var t,o=r(9);t=document.querySelectorAll(".js-item-row"),[].concat(function(n){if(Array.isArray(n)){for(var e=0,r=Array(n.length);e<n.length;e++)r[e]=n[e];return r}return Array.from(n)}(t)).forEach(function(n){var e=n.querySelector(".js-cost-final"),r=parseFloat(n.querySelector(".js-cost-in").innerHTML),t=parseInt(n.querySelector(".js-input-value").value);e.innerHTML=r*t}),(0,o.updateTotals)()},function(n,e,r){var t=r(2);"string"==typeof t&&(t=[[n.i,t,""]]);var o={sourceMap:!0,hmr:!0,transform:void 0,insertInto:void 0};r(4)(t,o);t.locals&&(n.exports=t.locals)},function(n,e,r){(n.exports=r(3)(!0)).push([n.i,"/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\nol, ul {\n  list-style: none; }\n\nblockquote, q {\n  quotes: none; }\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n* {\n  box-sizing: border-box; }\n\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n  background-color: #f8f8f8;\n  font-size: 100%;\n  font-family: \"Roboto\", sans-serif; }\n  @media (max-width: 767px) {\n    html,\n    body {\n      font-size: 95%; } }\n\nh1,\np {\n  margin-bottom: 1rem; }\n\nh1 {\n  font-size: 1.75rem;\n  line-height: 1.2; }\n\nbutton {\n  display: inline-block;\n  margin-bottom: 0.25rem;\n  font-weight: normal;\n  text-align: center;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: pointer;\n  background-image: none;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  font-size: 0.875rem;\n  border-radius: 4px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n.wrapper {\n  min-height: 100%;\n  display: flex;\n  flex-direction: column; }\n\n.header,\n.footer {\n  flex-shrink: 0; }\n\nmain {\n  flex-grow: 1; }\n\n.header {\n  padding: 0 1.875rem;\n  height: 7.5rem;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 2px 4px #dddddd; }\n  .header__logo img {\n    width: 7.5rem; }\n\n.footer {\n  text-align: center;\n  background-color: #77D3EB;\n  line-height: 2.5rem; }\n  .footer__copytext {\n    font-size: 0.875rem; }\n\n.cart {\n  max-width: 36.25rem;\n  margin: 3rem auto; }\n  @media (max-width: 767px) {\n    .cart {\n      padding: 1rem; } }\n\n.row {\n  display: flex;\n  justify-content: space-around; }\n  .row.th {\n    border-bottom: 1px solid #333333;\n    text-transform: capitalize; }\n  .row-footer {\n    justify-content: space-between; }\n  .row-buy-now {\n    justify-content: flex-end; }\n  .row-buy-now button {\n    background-color: #77D3EB;\n    padding: 0.625rem 1.25rem;\n    border-radius: 1.25rem; }\n\n.col {\n  padding: 0.625rem 0;\n  width: 12%;\n  overflow: hidden; }\n  .col-pro {\n    width: 30%; }\n    @media (max-width: 767px) {\n      .col-pro {\n        width: 20%; } }\n  .col-trash img {\n    width: 1.125rem;\n    cursor: pointer; }\n  .col input {\n    width: 3rem; }\n","",{version:3,sources:["C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/modules/_reset.scss","main.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/modules/_defaults.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/modules/_colors.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/mixins/_mediaqueries.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/mixins/_functions.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/components/_header.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/components/_footer.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/components/_cart.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/components/_table.scss"],names:[],mappings:"AAAA;;;CCGC;ADED;;;;;;;;;;;;;EAaC,SAAS;EACT,UAAU;EACV,SAAS;EACT,eAAe;EACf,aAAa;EACb,wBAAwB,EAAA;;AAEzB,gDAAA;AACA;;EAEC,cAAc,EAAA;;AAEf;EACC,cAAc,EAAA;;AAEf;EACC,gBAAgB,EAAA;;AAEjB;EACC,YAAY,EAAA;;AAEb;;EAEC,WAAW;EACX,aAAa,EAAA;;AAEd;EACC,yBAAyB;EACzB,iBAAiB,EAAA;;AE9ClB;EACI,sBAAsB,EAAA;;AAG1B;;EAEI,WAAW;EACX,YAAY;EACZ,yBCRW;EDSX,eAAe;EACf,iCAAiC,EAAA;EEG7B;IFTR;;MAQQ,cAAc,EAAA,EAErB;;AAED;;EAEI,mBGhBqB,EAAA;;AHkBzB;EACI,kBGnBqB;EHoBrB,gBAAgB,EAAA;;AAGpB;EACI,qBAAqB;EACrB,sBGzBqB;EH0BrB,mBAAmB;EACnB,kBAAkB;EAClB,sBAAsB;EACtB,8BAA8B;EAC9B,0BAA0B;EAC1B,eAAe;EACf,sBAAsB;EACtB,6BAA6B;EAC7B,mBAAmB;EACnB,mBGnCqB;EHoCrB,kBAAkB;EAClB,yBAAyB;EACzB,sBAAsB;EACtB,qBAAqB;EACrB,iBAAiB,EAAA;;AAGrB;EACI,gBAAgB;EAChB,aAAa;EACb,sBAAsB,EAAA;;AAG1B;;EAEI,cAAc,EAAA;;AAGlB;EACI,YAAY,EAAA;;AIzDhB;EACI,mBDCqB;ECArB,cDAqB;ECCrB,aAAa;EACb,mBAAmB;EACnB,6BHHU,EAAA;EGIT;IAEO,aDNa,EAAA;;AEFzB;EACI,kBAAkB;EAClB,yBJEU;EIDV,mBFDqB,EAAA;EEErB;IACI,mBFHiB,EAAA;;AGFzB;EACI,mBHCqB;EGArB,iBAAqB,EAAA;EJWjB;IIbR;MAIQ,aHFiB,EAAA,EGIxB;;ACLD;EACI,aAAa;EACb,6BAA6B,EAAA;EAFjC;IAIQ,gCNJO;IMKP,0BAA0B,EAAA;EAE9B;IACI,8BAA8B,EAAA;EAElC;IACI,yBAAyB,EAAA;EAE7B;IACI,yBNXM;IMYN,yBJdiB;IIejB,sBJfiB,EAAA;;AIoBzB;EACI,mBAAmB;EACnB,UAAU;EACV,gBAAgB,EAAA;EAChB;IACI,UAAU,EAAA;ILdV;MKaJ;QAGQ,UAAU,EAAA,EAEjB;EACD;IACI,eJ/BiB;IIgCjB,eAAe,EAAA;EAZvB;IAeQ,WJnCiB,EAAA",file:"main.scss",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}","/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\nol, ul {\n  list-style: none; }\n\nblockquote, q {\n  quotes: none; }\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n* {\n  box-sizing: border-box; }\n\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n  background-color: #f8f8f8;\n  font-size: 100%;\n  font-family: \"Roboto\", sans-serif; }\n  @media (max-width: 767px) {\n    html,\n    body {\n      font-size: 95%; } }\n\nh1,\np {\n  margin-bottom: 1rem; }\n\nh1 {\n  font-size: 1.75rem;\n  line-height: 1.2; }\n\nbutton {\n  display: inline-block;\n  margin-bottom: 0.25rem;\n  font-weight: normal;\n  text-align: center;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: pointer;\n  background-image: none;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  font-size: 0.875rem;\n  border-radius: 4px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n.wrapper {\n  min-height: 100%;\n  display: flex;\n  flex-direction: column; }\n\n.header,\n.footer {\n  flex-shrink: 0; }\n\nmain {\n  flex-grow: 1; }\n\n.header {\n  padding: 0 1.875rem;\n  height: 7.5rem;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 2px 4px #dddddd; }\n  .header__logo img {\n    width: 7.5rem; }\n\n.footer {\n  text-align: center;\n  background-color: #77D3EB;\n  line-height: 2.5rem; }\n  .footer__copytext {\n    font-size: 0.875rem; }\n\n.cart {\n  max-width: 36.25rem;\n  margin: 3rem auto; }\n  @media (max-width: 767px) {\n    .cart {\n      padding: 1rem; } }\n\n.row {\n  display: flex;\n  justify-content: space-around; }\n  .row.th {\n    border-bottom: 1px solid #333333;\n    text-transform: capitalize; }\n  .row-footer {\n    justify-content: space-between; }\n  .row-buy-now {\n    justify-content: flex-end; }\n  .row-buy-now button {\n    background-color: #77D3EB;\n    padding: 0.625rem 1.25rem;\n    border-radius: 1.25rem; }\n\n.col {\n  padding: 0.625rem 0;\n  width: 12%;\n  overflow: hidden; }\n  .col-pro {\n    width: 30%; }\n    @media (max-width: 767px) {\n      .col-pro {\n        width: 20%; } }\n  .col-trash img {\n    width: 1.125rem;\n    cursor: pointer; }\n  .col input {\n    width: 3rem; }\n",'* {\r\n    box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: $white;\r\n    font-size: 100%;\r\n    font-family: "Roboto", sans-serif;\r\n    @include media-query(mobile){\r\n        font-size: 95%;\r\n    }\r\n}\r\n\r\nh1,\r\np {\r\n    margin-bottom: retr(16);\r\n}\r\nh1 {\r\n    font-size: retr(28);\r\n    line-height: 1.2;\r\n}\r\n\r\nbutton {\r\n    display: inline-block;\r\n    margin-bottom: retr(4);\r\n    font-weight: normal;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n    -ms-touch-action: manipulation;\r\n    touch-action: manipulation;\r\n    cursor: pointer;\r\n    background-image: none;\r\n    border: 1px solid transparent;\r\n    white-space: nowrap;\r\n    font-size: retr(14);\r\n    border-radius: 4px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n}\r\n\r\n.wrapper {\r\n    min-height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.header,\r\n.footer {\r\n    flex-shrink: 0;\r\n}\r\n\r\nmain {\r\n    flex-grow: 1;\r\n}\r\n',"$white: #f8f8f8;\r\n$black: #333333;\r\n$grey: #dddddd;\r\n$dark-grey: #e2e2e2;\r\n$blue: #77D3EB;",'$breakpoint-lg: "1024px";\r\n$breakpoint-md: "767px";\r\n\r\n//iphone-X break points\r\n$breakpoint-min-iphonex: 375px;\r\n$breakpoint-max-iphonex: 812px;\r\n\r\n@mixin media-query($point) {\r\n    @if $point==desktop {\r\n        @media (min-width: $breakpoint-lg) {\r\n            @content;\r\n        }\r\n    } @else if $point==mobile {\r\n        @media (max-width: $breakpoint-md) {\r\n            @content;\r\n        }\r\n    } @else if $point==tablet {\r\n        @media (min-width: $breakpoint-md) and (max-width: $breakpoint-lg) {\r\n            @content;\r\n        }\r\n    }\r\n\r\n    //both iphoneX portrait and landscape\r\n    @else if $point==iphonex {\r\n        @media only screen and (min-device-width: $breakpoint-min-iphonex) and (max-device-width: $breakpoint-max-iphonex) and (-webkit-min-device-pixel-ratio: 3) {\r\n            @content;\r\n        }\r\n    }\r\n    //only iphoneX landscape\r\n    @else if $point==iphonexlandscape {\r\n        @media only screen and (min-device-width: $breakpoint-min-iphonex) and (max-device-width: $breakpoint-max-iphonex) and (-webkit-min-device-pixel-ratio: 3) and (orientation: landscape) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n',"@function retr($size){\r\n    $rem: $size/16;\r\n    @return #{$rem}rem;\r\n}",".header {\r\n    padding: 0 retr(30);\r\n    height: retr(120);\r\n    display: flex;\r\n    align-items: center;\r\n    box-shadow: 0 2px 4px $grey;\r\n    &__logo {\r\n        img {\r\n            width: retr(120);\r\n        }\r\n    }\r\n}\r\n",".footer {\r\n    text-align: center;\r\n    background-color: $blue;\r\n    line-height: retr(40);\r\n    &__copytext {\r\n        font-size: retr(14);\r\n    }\r\n}\r\n",".cart {\r\n    max-width: retr(580);\r\n    margin: retr(48) auto;\r\n    @include media-query(mobile){\r\n        padding: retr(16);\r\n    }\r\n}","\r\n.row{\r\n    display: flex;\r\n    justify-content: space-around;\r\n    &.th {\r\n        border-bottom: 1px solid $black;\r\n        text-transform: capitalize;\r\n    }\r\n    &-footer{\r\n        justify-content: space-between;\r\n    }\r\n    &-buy-now{\r\n        justify-content: flex-end;\r\n    }\r\n    &-buy-now button{\r\n        background-color: $blue;\r\n        padding: retr(10) retr(20);\r\n        border-radius: retr(20);\r\n        \r\n    }\r\n}\r\n\r\n.col {\r\n    padding: retr(10) 0;\r\n    width: 12%;\r\n    overflow: hidden;\r\n    &-pro{\r\n        width: 30%;\r\n        @include media-query(mobile){\r\n            width: 20%;\r\n        }\r\n    }\r\n    &-trash img{\r\n        width: retr(18);\r\n        cursor: pointer;\r\n    }\r\n    input{\r\n        width: retr(48);\r\n        \r\n    }\r\n}"]}])},function(n,e,r){"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var r=function(n,e){var r=n[1]||"",t=n[3];if(!t)return r;if(e&&"function"==typeof btoa){var o=(a=t,s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(c," */")),i=t.sources.map(function(n){return"/*# sourceURL=".concat(t.sourceRoot).concat(n," */")});return[r].concat(i).concat([o]).join("\n")}var a,s,c;return[r].join("\n")}(e,n);return e[2]?"@media ".concat(e[2],"{").concat(r,"}"):r}).join("")},e.i=function(n,r){"string"==typeof n&&(n=[[null,n,""]]);for(var t={},o=0;o<this.length;o++){var i=this[o][0];null!=i&&(t[i]=!0)}for(var a=0;a<n.length;a++){var s=n[a];null!=s[0]&&t[s[0]]||(r&&!s[2]?s[2]=r:r&&(s[2]="(".concat(s[2],") and (").concat(r,")")),e.push(s))}},e}},function(n,e,r){var t,o,i={},a=(t=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=t.apply(this,arguments)),o}),s=function(n){var e={};return function(n,r){if("function"==typeof n)return n();if(void 0===e[n]){var t=function(n,e){return e?e.querySelector(n):document.querySelector(n)}.call(this,n,r);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}}(),c=null,l=0,d=[],u=r(5);function p(n,e){for(var r=0;r<n.length;r++){var t=n[r],o=i[t.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](t.parts[a]);for(;a<t.parts.length;a++)o.parts.push(g(t.parts[a],e))}else{var s=[];for(a=0;a<t.parts.length;a++)s.push(g(t.parts[a],e));i[t.id]={id:t.id,refs:1,parts:s}}}}function A(n,e){for(var r=[],t={},o=0;o<n.length;o++){var i=n[o],a=e.base?i[0]+e.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};t[a]?t[a].parts.push(s):r.push(t[a]={id:a,parts:[s]})}return r}function f(n,e){var r=s(n.insertInto);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var t=d[d.length-1];if("top"===n.insertAt)t?t.nextSibling?r.insertBefore(e,t.nextSibling):r.appendChild(e):r.insertBefore(e,r.firstChild),d.push(e);else if("bottom"===n.insertAt)r.appendChild(e);else{if("object"!=typeof n.insertAt||!n.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=s(n.insertAt.before,r);r.insertBefore(e,o)}}function m(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var e=d.indexOf(n);e>=0&&d.splice(e,1)}function h(n){var e=document.createElement("style");if(void 0===n.attrs.type&&(n.attrs.type="text/css"),void 0===n.attrs.nonce){var t=function(){0;return r.nc}();t&&(n.attrs.nonce=t)}return b(e,n.attrs),f(n,e),e}function b(n,e){Object.keys(e).forEach(function(r){n.setAttribute(r,e[r])})}function g(n,e){var r,t,o,i;if(e.transform&&n.css){if(!(i="function"==typeof e.transform?e.transform(n.css):e.transform.default(n.css)))return function(){};n.css=i}if(e.singleton){var a=l++;r=c||(c=h(e)),t=B.bind(null,r,a,!1),o=B.bind(null,r,a,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(r=function(n){var e=document.createElement("link");return void 0===n.attrs.type&&(n.attrs.type="text/css"),n.attrs.rel="stylesheet",b(e,n.attrs),f(n,e),e}(e),t=function(n,e,r){var t=r.css,o=r.sourceMap,i=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||i)&&(t=u(t));o&&(t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([t],{type:"text/css"}),s=n.href;n.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}.bind(null,r,e),o=function(){m(r),r.href&&URL.revokeObjectURL(r.href)}):(r=h(e),t=function(n,e){var r=e.css,t=e.media;t&&n.setAttribute("media",t);if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}.bind(null,r),o=function(){m(r)});return t(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t(n=e)}else o()}}n.exports=function(n,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=a()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var r=A(n,e);return p(r,e),function(n){for(var t=[],o=0;o<r.length;o++){var a=r[o];(s=i[a.id]).refs--,t.push(s)}n&&p(A(n,e),e);for(o=0;o<t.length;o++){var s;if(0===(s=t[o]).refs){for(var c=0;c<s.parts.length;c++)s.parts[c]();delete i[s.id]}}}};var y,v=(y=[],function(n,e){return y[n]=e,y.filter(Boolean).join("\n")});function B(n,e,r,t){var o=r?"":t.css;if(n.styleSheet)n.styleSheet.cssText=v(e,o);else{var i=document.createTextNode(o),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(i,a[e]):n.appendChild(i)}}},function(n,e){n.exports=function(n){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var r=e.protocol+"//"+e.host,t=r+e.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(n,e){var o,i=e.trim().replace(/^"(.*)"$/,function(n,e){return e}).replace(/^'(.*)'$/,function(n,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?n:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?r+i:t+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(n,e,r){"use strict";var t,o=r(7),i=(t=o)&&t.__esModule?t:{default:t};var a=document.getElementById("product-table-footer"),s=r(8);s.config.forEach(function(n){var e,r;r='\n    <div class="layout-inline row js-item-row">\n        <div class="col col-pro">\n            <p class="js-item">'+(e=n).name+'</p>\n        </div>\n        <div class="col col-price col-numeric align-center ">\n            <p>£<span class="js-cost-in">'+e.price+'</span></p>\n        </div>\n        <div class="col col-qty">\n        <input type="number" value='+e.qty+' name="quantity" min="1" max="10" class="js-input-value">\n            <button class="js-plus">+</button>\n            <button class="js-minus">-</button>\n        </div>\n        <div class="col col-net">\n            <p>£<span class="js-cost-final">1.99</span></p>\n        </div>\n        <div class="col col-trash">\n            <img class="js-trash" src='+i.default+' alt="delete-product" />\n        </div>\n    </div>',a.insertAdjacentHTML("beforebegin",r)})},function(n,e,r){n.exports=r.p+"4d9a710ec9fbd6768a2bb90e7d3f9c33.png"},function(n){n.exports={config:[{name:"Cotton T-Shirt, Medium",price:1.99,qty:1},{name:"Baseball Cap, One Size",price:2.99,qty:2},{name:"Swim Shorts, Medium",price:3.99,qty:1}]}},function(n,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t=[],o={},i=[],a=document.querySelector(".product-table"),s=document.querySelector(".js-buy"),c=function(n,e){var r=$(n).parents(".js-item-row"),a=r.find(".js-item").text(),s=(parseFloat(r.find(".js-cost-in").text())*e).toFixed(2);r.find(".js-cost-final").text(s),o[a]=e,Object.keys(o).forEach(function(n,e){var r={};r[n]=o[n],t.push(r)}),i=Array.from(t),t=[]},l=function(){var n=document.querySelectorAll(".js-cost-final"),e=document.querySelector(".subtotal-amt"),r=document.querySelector(".vat-amt"),t=document.querySelector(".total-amt");console.log(n);var o=0;[].concat(function(n){if(Array.isArray(n)){for(var e=0,r=Array(n.length);e<n.length;e++)r[e]=n[e];return r}return Array.from(n)}(n)).forEach(function(n){o+=parseFloat(n.innerHTML)}),e.innerHTML=parseFloat(o).toFixed(2),r.innerHTML=(.2*parseFloat(o)).toFixed(2),t.innerHTML=(parseFloat(e.innerHTML)+parseFloat(r.innerHTML)).toFixed(2)},d=function(n,e){e<0?$(n).parents(".js-item-row").find(".js-input-value").val(0):e>10&&$(n).parents(".js-item-row").find(".js-input-value").val(10),c(n,$(n).parents(".js-item-row").find(".js-input-value").val()),l()};$(document).on("click",".js-minus",function(n){n.preventDefault();var e=$(n.currentTarget).parents(".js-item-row").find(".js-input-value");e.val(parseInt(e.val())-1),d(n.currentTarget,parseInt(e.val()))}),$(document).on("click",".js-plus",function(n){n.preventDefault();var e=$(n.currentTarget).parents(".js-item-row").find(".js-input-value");e.val(parseInt(e.val())+1),d(n.currentTarget,parseInt(e.val()))}),$(document).on("change",".js-input-value",function(n){$(n.currentTarget).val()&&d(n.currentTarget,parseInt($(n.currentTarget).val()))}),a.addEventListener("click",function(n){if(n.target.matches(".js-trash")){var e=n.target.parentNode.parentNode;e.parentNode.removeChild(e),document.querySelectorAll(".js-item-row").length<1&&s.setAttribute("disabled","disabled"),l()}},!1),s.addEventListener("click",function(n){$.ajax({type:"POST",url:"#",data:i,dataType:"json",success:function(n){console.log("data posted"+n)},error:function(n){console.log("error issue"+n.responseText),console.log("data posted"+i)}})},!1),e.updateTotals=l,e.addMinus=c}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9zdHlsZXMvbWFpbi5zY3NzP2RmZmIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy9tYWluLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9iaW5kRGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1nL3RyYXNoLWljb24ucG5nIiwid2VicGFjazovLy8uL3NyYy9zY3JpcHRzL2Z1bmN0aW9ucy5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInJvd3MiLCJfZnVuY3Rpb25zIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29uY2F0IiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiZm9yRWFjaCIsInJvdyIsInRlbXBDb3N0IiwicXVlcnlTZWxlY3RvciIsIml0ZW1QcmljZSIsInBhcnNlRmxvYXQiLCJpbm5lckhUTUwiLCJpdGVtVmFsIiwicGFyc2VJbnQiLCJ1cGRhdGVUb3RhbHMiLCJjb250ZW50Iiwib3B0aW9ucyIsInNvdXJjZU1hcCIsImhtciIsInRyYW5zZm9ybSIsImluc2VydEludG8iLCJ1bmRlZmluZWQiLCJsb2NhbHMiLCJwdXNoIiwidmVyc2lvbiIsInNvdXJjZXMiLCJuYW1lcyIsIm1hcHBpbmdzIiwiZmlsZSIsInNvdXJjZXNDb250ZW50IiwidXNlU291cmNlTWFwIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlVVJMcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJqb2luIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwibGVuZ3RoIiwiaWQiLCJfaSIsImZuIiwibWVtbyIsInN0eWxlc0luRG9tIiwiaXNPbGRJRSIsIndpbmRvdyIsImFsbCIsImF0b2IiLCJhcHBseSIsImFyZ3VtZW50cyIsImdldEVsZW1lbnQiLCJ0YXJnZXQiLCJwYXJlbnQiLCJzdHlsZVRhcmdldCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImZpeFVybHMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsImRvbVN0eWxlIiwicmVmcyIsImoiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiRXJyb3IiLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwibmV4dFNpYmxpbmciLCJpbnNlcnRCZWZvcmUiLCJhcHBlbmRDaGlsZCIsImZpcnN0Q2hpbGQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJpZHgiLCJpbmRleE9mIiwic3BsaWNlIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsImF0dHJzIiwidHlwZSIsIm5vbmNlIiwibmMiLCJnZXROb25jZSIsImFkZEF0dHJzIiwiZWwiLCJrZXlzIiwic2V0QXR0cmlidXRlIiwib2JqIiwidXBkYXRlIiwicmVtb3ZlIiwicmVzdWx0IiwiZGVmYXVsdCIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsImF1dG9GaXhVcmxzIiwiY29udmVydFRvQWJzb2x1dGVVcmxzIiwiYmxvYiIsIm9sZFNyYyIsImhyZWYiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNyZWF0ZVRleHROb2RlIiwibmV3T2JqIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJpbmRleCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwibG9jYXRpb24iLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJob3N0IiwiY3VycmVudERpciIsInBhdGhuYW1lIiwicmVwbGFjZSIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCJ0cmltIiwiJDEiLCJ0ZXN0IiwiX3RyYXNoSWNvbiIsInByb2R1Y3RUYWJsZSIsImdldEVsZW1lbnRCeUlkIiwidXJsIiwicmVxdWlyZSIsImNvbmZpZyIsImVsZW1lbnQiLCJwcm9kdWN0IiwidGVtcGxhdGUiLCJwcmljZSIsInF0eSIsIlRyYXNoQ2FuIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwiaXRlbXNJbkFycmF5IiwiaXRlbXNPYmoiLCJmaW5hbEFycmF5IiwicHJvZHVjdHMiLCJidXlOb3ciLCJhZGRNaW51cyIsImV2ZW50IiwiJG9iamVjdEVsZW0iLCIkIiwicGFyZW50cyIsIm9iZWpJdGVtIiwiZmluZCIsInRleHQiLCJ0b3RhbFZhbHVlIiwidG9GaXhlZCIsIml0ZW1Ub1B1c2giLCJBcnJheSIsImZyb20iLCJpdGVtc0Nvc3QiLCJzdWJUb3RhbFRleHQiLCJ2YXRUZXh0IiwidG90YWxUZXh0IiwiY29uc29sZSIsImxvZyIsInN1bSIsImNvbW1vbkZ1bmN0aW9uIiwidmFsIiwib24iLCJwcmV2ZW50RGVmYXVsdCIsIiRpbnB1dEVsZW0iLCJjdXJyZW50VGFyZ2V0IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1hdGNoZXMiLCJhamF4IiwiZGF0YVR5cGUiLCJzdWNjZXNzIiwicmVzdWx0RGF0YSIsImVycm9yIiwicmVzcG9uc2VUZXh0Il0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFFBQUEsSUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdB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QUFXQSxXQUNsQzlGLEVBQUk4RixXQUFXQyxZQUFZL0YsR0FDeEJMLFNBQVNDLGlCQUFpQixnQkFBZ0JrRCxPQUFTLEdBQ2xEaUksRUFBT2xFLGFBQWEsV0FBVyxZQUVuQ3JHLE9BQ0QsR0FDSHVLLEVBQU8yQixpQkFBaUIsUUFBUSxTQUFTekIsR0FFekNFLEVBQUV5QixLQUFLLENBQ0h0RyxLQUFLLE9BQ0wyRCxJQUFJLElBQ0ozSCxLQUFLdUksRUFDTGdDLFNBQVMsT0FDVEMsUUFBUSxTQUFTQyxHQUNiZCxRQUFRQyxJQUFJLGNBQWVhLElBRS9CQyxNQUFNLFNBQVNBLEdBQ1hmLFFBQVFDLElBQUksY0FBY2MsRUFBTUMsY0FDaENoQixRQUFRQyxJQUFJLGNBQWVyQixRQUdqQyxLQUVNckssaUJBQWN3SyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiXHJcbmltcG9ydCAnLi9zdHlsZXMvbWFpbi5zY3NzJztcclxuaW1wb3J0ICcuL3NjcmlwdHMvYmluZERhdGEnO1xyXG5pbXBvcnQgJy4vc2NyaXB0cy9mdW5jdGlvbnMnO1xyXG5pbXBvcnQgeyB1cGRhdGVUb3RhbHMgfSBmcm9tICcuL3NjcmlwdHMvZnVuY3Rpb25zJztcclxuXHJcbi8vaW5pdGlhbCBkaXNwbGF5IG9mIGZpZ3VyZXM7XHJcbigoKSA9PiB7XHJcbiAgICBsZXQgcm93cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5qcy1pdGVtLXJvdycpO1xyXG4gICAgWy4uLnJvd3NdLmZvckVhY2gocm93ID0+IHtcclxuICAgICAgICBsZXQgdGVtcENvc3QgPSByb3cucXVlcnlTZWxlY3RvcignLmpzLWNvc3QtZmluYWwnKTtcclxuICAgICAgICBsZXQgaXRlbVByaWNlID0gcGFyc2VGbG9hdChyb3cucXVlcnlTZWxlY3RvcignLmpzLWNvc3QtaW4nKS5pbm5lckhUTUwpO1xyXG4gICAgICAgIGxldCBpdGVtVmFsID0gcGFyc2VJbnQocm93LnF1ZXJ5U2VsZWN0b3IoJy5qcy1pbnB1dC12YWx1ZScpLnZhbHVlKTtcclxuICAgICAgICB0ZW1wQ29zdC5pbm5lckhUTUwgPSBpdGVtUHJpY2UgKiBpdGVtVmFsO1xyXG4gICAgfSk7XHJcblxyXG59KSgpO1xyXG5cclxudXBkYXRlVG90YWxzKCk7XHJcblxyXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNi0xIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTYtMiEuL21haW4uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wic291cmNlTWFwXCI6dHJ1ZSxcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTYtMSEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS02LTIhLi9tYWluLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS02LTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNi0yIS4vbWFpbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikodHJ1ZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvIFxcclxcbiAgIHYyLjAgfCAyMDExMDEyNlxcclxcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXFxyXFxuKi9cXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcXG5iLCB1LCBpLCBjZW50ZXIsXFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsXFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBib3JkZXI6IDA7XFxuICBmb250LXNpemU6IDEwMCU7XFxuICBmb250OiBpbmhlcml0O1xcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XFxuXFxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xcbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcXG4gIGRpc3BsYXk6IGJsb2NrOyB9XFxuXFxuYm9keSB7XFxuICBsaW5lLWhlaWdodDogMTsgfVxcblxcbm9sLCB1bCB7XFxuICBsaXN0LXN0eWxlOiBub25lOyB9XFxuXFxuYmxvY2txdW90ZSwgcSB7XFxuICBxdW90ZXM6IG5vbmU7IH1cXG5cXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcXG5xOmJlZm9yZSwgcTphZnRlciB7XFxuICBjb250ZW50OiAnJztcXG4gIGNvbnRlbnQ6IG5vbmU7IH1cXG5cXG50YWJsZSB7XFxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cXG5cXG4qIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cXG5cXG5odG1sLFxcbmJvZHkge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4O1xcbiAgZm9udC1zaXplOiAxMDAlO1xcbiAgZm9udC1mYW1pbHk6IFxcXCJSb2JvdG9cXFwiLCBzYW5zLXNlcmlmOyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcXG4gICAgaHRtbCxcXG4gICAgYm9keSB7XFxuICAgICAgZm9udC1zaXplOiA5NSU7IH0gfVxcblxcbmgxLFxcbnAge1xcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxcblxcbmgxIHtcXG4gIGZvbnQtc2l6ZTogMS43NXJlbTtcXG4gIGxpbmUtaGVpZ2h0OiAxLjI7IH1cXG5cXG5idXR0b24ge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgbWFyZ2luLWJvdHRvbTogMC4yNXJlbTtcXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgLW1zLXRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xcbiAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7IH1cXG5cXG4ud3JhcHBlciB7XFxuICBtaW4taGVpZ2h0OiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cXG5cXG4uaGVhZGVyLFxcbi5mb290ZXIge1xcbiAgZmxleC1zaHJpbms6IDA7IH1cXG5cXG5tYWluIHtcXG4gIGZsZXgtZ3JvdzogMTsgfVxcblxcbi5oZWFkZXIge1xcbiAgcGFkZGluZzogMCAxLjg3NXJlbTtcXG4gIGhlaWdodDogNy41cmVtO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBib3gtc2hhZG93OiAwIDJweCA0cHggI2RkZGRkZDsgfVxcbiAgLmhlYWRlcl9fbG9nbyBpbWcge1xcbiAgICB3aWR0aDogNy41cmVtOyB9XFxuXFxuLmZvb3RlciB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzdEM0VCO1xcbiAgbGluZS1oZWlnaHQ6IDIuNXJlbTsgfVxcbiAgLmZvb3Rlcl9fY29weXRleHQge1xcbiAgICBmb250LXNpemU6IDAuODc1cmVtOyB9XFxuXFxuLmNhcnQge1xcbiAgbWF4LXdpZHRoOiAzNi4yNXJlbTtcXG4gIG1hcmdpbjogM3JlbSBhdXRvOyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcXG4gICAgLmNhcnQge1xcbiAgICAgIHBhZGRpbmc6IDFyZW07IH0gfVxcblxcbi5yb3cge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOyB9XFxuICAucm93LnRoIHtcXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzMzMzMzM7XFxuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOyB9XFxuICAucm93LWZvb3RlciB7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxcbiAgLnJvdy1idXktbm93IHtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxcbiAgLnJvdy1idXktbm93IGJ1dHRvbiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM3N0QzRUI7XFxuICAgIHBhZGRpbmc6IDAuNjI1cmVtIDEuMjVyZW07XFxuICAgIGJvcmRlci1yYWRpdXM6IDEuMjVyZW07IH1cXG5cXG4uY29sIHtcXG4gIHBhZGRpbmc6IDAuNjI1cmVtIDA7XFxuICB3aWR0aDogMTIlO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxcbiAgLmNvbC1wcm8ge1xcbiAgICB3aWR0aDogMzAlOyB9XFxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xcbiAgICAgIC5jb2wtcHJvIHtcXG4gICAgICAgIHdpZHRoOiAyMCU7IH0gfVxcbiAgLmNvbC10cmFzaCBpbWcge1xcbiAgICB3aWR0aDogMS4xMjVyZW07XFxuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxcbiAgLmNvbCBpbnB1dCB7XFxuICAgIHdpZHRoOiAzcmVtOyB9XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiQzovVXNlcnMvUk9NQUhBSkEvRGVza3RvcC9yb2hhbi9wcm9qZWN0cy9Bc3NpZ21lbnRzL3Nob3BwaW5nLWNhcnQtdWkvc3JjL3N0eWxlcy9tb2R1bGVzL19yZXNldC5zY3NzXCIsXCJtYWluLnNjc3NcIixcIkM6L1VzZXJzL1JPTUFIQUpBL0Rlc2t0b3Avcm9oYW4vcHJvamVjdHMvQXNzaWdtZW50cy9zaG9wcGluZy1jYXJ0LXVpL3NyYy9zdHlsZXMvbW9kdWxlcy9fZGVmYXVsdHMuc2Nzc1wiLFwiQzovVXNlcnMvUk9NQUhBSkEvRGVza3RvcC9yb2hhbi9wcm9qZWN0cy9Bc3NpZ21lbnRzL3Nob3BwaW5nLWNhcnQtdWkvc3JjL3N0eWxlcy9tb2R1bGVzL19jb2xvcnMuc2Nzc1wiLFwiQzovVXNlcnMvUk9NQUhBSkEvRGVza3RvcC9yb2hhbi9wcm9qZWN0cy9Bc3NpZ21lbnRzL3Nob3BwaW5nLWNhcnQtdWkvc3JjL3N0eWxlcy9taXhpbnMvX21lZGlhcXVlcmllcy5zY3NzXCIsXCJDOi9Vc2Vycy9ST01BSEFKQS9EZXNrdG9wL3JvaGFuL3Byb2plY3RzL0Fzc2lnbWVudHMvc2hvcHBpbmctY2FydC11aS9zcmMvc3R5bGVzL21peGlucy9fZnVuY3Rpb25zLnNjc3NcIixcIkM6L1VzZXJzL1JPTUFIQUpBL0Rlc2t0b3Avcm9oYW4vcHJvamVjdHMvQXNzaWdtZW50cy9zaG9wcGluZy1jYXJ0LXVpL3NyYy9zdHlsZXMvY29tcG9uZW50cy9faGVhZGVyLnNjc3NcIixcIkM6L1VzZXJzL1JPTUFIQUpBL0Rlc2t0b3Avcm9oYW4vcHJvamVjdHMvQXNzaWdtZW50cy9zaG9wcGluZy1jYXJ0LXVpL3NyYy9zdHlsZXMvY29tcG9uZW50cy9fZm9vdGVyLnNjc3NcIixcIkM6L1VzZXJzL1JPTUFIQUpBL0Rlc2t0b3Avcm9oYW4vcHJvamVjdHMvQXNzaWdtZW50cy9zaG9wcGluZy1jYXJ0LXVpL3NyYy9zdHlsZXMvY29tcG9uZW50cy9fY2FydC5zY3NzXCIsXCJDOi9Vc2Vycy9ST01BSEFKQS9EZXNrdG9wL3JvaGFuL3Byb2plY3RzL0Fzc2lnbWVudHMvc2hvcHBpbmctY2FydC11aS9zcmMvc3R5bGVzL2NvbXBvbmVudHMvX3RhYmxlLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7OztDQ0dDO0FERUQ7Ozs7Ozs7Ozs7Ozs7RUFhQyxTQUFTO0VBQ1QsVUFBVTtFQUNWLFNBQVM7RUFDVCxlQUFlO0VBQ2YsYUFBYTtFQUNiLHdCQUF3QixFQUFBOztBQUV6QixnREFBQTtBQUNBOztFQUVDLGNBQWMsRUFBQTs7QUFFZjtFQUNDLGNBQWMsRUFBQTs7QUFFZjtFQUNDLGdCQUFnQixFQUFBOztBQUVqQjtFQUNDLFlBQVksRUFBQTs7QUFFYjs7RUFFQyxXQUFXO0VBQ1gsYUFBYSxFQUFBOztBQUVkO0VBQ0MseUJBQXlCO0VBQ3pCLGlCQUFpQixFQUFBOztBRTlDbEI7RUFDSSxzQkFBc0IsRUFBQTs7QUFHMUI7O0VBRUksV0FBVztFQUNYLFlBQVk7RUFDWix5QkNSVztFRFNYLGVBQWU7RUFDZixpQ0FBaUMsRUFBQTtFRUc3QjtJRlRSOztNQVFRLGNBQWMsRUFBQSxFQUVyQjs7QUFFRDs7RUFFSSxtQkdoQnFCLEVBQUE7O0FIa0J6QjtFQUNJLGtCR25CcUI7RUhvQnJCLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLHFCQUFxQjtFQUNyQixzQkd6QnFCO0VIMEJyQixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0Qiw4QkFBOEI7RUFDOUIsMEJBQTBCO0VBQzFCLGVBQWU7RUFDZixzQkFBc0I7RUFDdEIsNkJBQTZCO0VBQzdCLG1CQUFtQjtFQUNuQixtQkduQ3FCO0VIb0NyQixrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLHNCQUFzQjtFQUN0QixxQkFBcUI7RUFDckIsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixzQkFBc0IsRUFBQTs7QUFHMUI7O0VBRUksY0FBYyxFQUFBOztBQUdsQjtFQUNJLFlBQVksRUFBQTs7QUl6RGhCO0VBQ0ksbUJEQ3FCO0VDQXJCLGNEQXFCO0VDQ3JCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsNkJISFUsRUFBQTtFR0lUO0lBRU8sYUROYSxFQUFBOztBRUZ6QjtFQUNJLGtCQUFrQjtFQUNsQix5QkpFVTtFSURWLG1CRkRxQixFQUFBO0VFRXJCO0lBQ0ksbUJGSGlCLEVBQUE7O0FHRnpCO0VBQ0ksbUJIQ3FCO0VHQXJCLGlCQUFxQixFQUFBO0VKV2pCO0lJYlI7TUFJUSxhSEZpQixFQUFBLEVHSXhCOztBQ0xEO0VBQ0ksYUFBYTtFQUNiLDZCQUE2QixFQUFBO0VBRmpDO0lBSVEsZ0NOSk87SU1LUCwwQkFBMEIsRUFBQTtFQUU5QjtJQUNJLDhCQUE4QixFQUFBO0VBRWxDO0lBQ0kseUJBQXlCLEVBQUE7RUFFN0I7SUFDSSx5Qk5YTTtJTVlOLHlCSmRpQjtJSWVqQixzQkpmaUIsRUFBQTs7QUlvQnpCO0VBQ0ksbUJBQW1CO0VBQ25CLFVBQVU7RUFDVixnQkFBZ0IsRUFBQTtFQUNoQjtJQUNJLFVBQVUsRUFBQTtJTGRWO01LYUo7UUFHUSxVQUFVLEVBQUEsRUFFakI7RUFDRDtJQUNJLGVKL0JpQjtJSWdDakIsZUFBZSxFQUFBO0VBWnZCO0lBZVEsV0puQ2lCLEVBQUFcIixcImZpbGVcIjpcIm1haW4uc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LyBcXHJcXG4gICB2Mi4wIHwgMjAxMTAxMjZcXHJcXG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxcclxcbiovXFxyXFxuXFxyXFxuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxcclxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcXHJcXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXFxyXFxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxcclxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXFxyXFxuYiwgdSwgaSwgY2VudGVyLFxcclxcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXFxyXFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXFxyXFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXFxyXFxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsIFxcclxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgXFxyXFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXFxyXFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcXHJcXG5cXHRtYXJnaW46IDA7XFxyXFxuXFx0cGFkZGluZzogMDtcXHJcXG5cXHRib3JkZXI6IDA7XFxyXFxuXFx0Zm9udC1zaXplOiAxMDAlO1xcclxcblxcdGZvbnQ6IGluaGVyaXQ7XFxyXFxuXFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcclxcbn1cXHJcXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXFxyXFxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgXFxyXFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcXHJcXG5cXHRkaXNwbGF5OiBibG9jaztcXHJcXG59XFxyXFxuYm9keSB7XFxyXFxuXFx0bGluZS1oZWlnaHQ6IDE7XFxyXFxufVxcclxcbm9sLCB1bCB7XFxyXFxuXFx0bGlzdC1zdHlsZTogbm9uZTtcXHJcXG59XFxyXFxuYmxvY2txdW90ZSwgcSB7XFxyXFxuXFx0cXVvdGVzOiBub25lO1xcclxcbn1cXHJcXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcXHJcXG5xOmJlZm9yZSwgcTphZnRlciB7XFxyXFxuXFx0Y29udGVudDogJyc7XFxyXFxuXFx0Y29udGVudDogbm9uZTtcXHJcXG59XFxyXFxudGFibGUge1xcclxcblxcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxyXFxuXFx0Ym9yZGVyLXNwYWNpbmc6IDA7XFxyXFxufVwiLFwiLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8gXFxyXFxuICAgdjIuMCB8IDIwMTEwMTI2XFxyXFxuICAgTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcXHJcXG4qL1xcbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxcbmIsIHUsIGksIGNlbnRlcixcXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIGJvcmRlcjogMDtcXG4gIGZvbnQtc2l6ZTogMTAwJTtcXG4gIGZvbnQ6IGluaGVyaXQ7XFxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cXG5cXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXFxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSxcXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xcbiAgZGlzcGxheTogYmxvY2s7IH1cXG5cXG5ib2R5IHtcXG4gIGxpbmUtaGVpZ2h0OiAxOyB9XFxuXFxub2wsIHVsIHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cXG5cXG5ibG9ja3F1b3RlLCBxIHtcXG4gIHF1b3Rlczogbm9uZTsgfVxcblxcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxcbnE6YmVmb3JlLCBxOmFmdGVyIHtcXG4gIGNvbnRlbnQ6ICcnO1xcbiAgY29udGVudDogbm9uZTsgfVxcblxcbnRhYmxlIHtcXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxuICBib3JkZXItc3BhY2luZzogMDsgfVxcblxcbioge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxcblxcbmh0bWwsXFxuYm9keSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7XFxuICBmb250LXNpemU6IDEwMCU7XFxuICBmb250LWZhbWlseTogXFxcIlJvYm90b1xcXCIsIHNhbnMtc2VyaWY7IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xcbiAgICBodG1sLFxcbiAgICBib2R5IHtcXG4gICAgICBmb250LXNpemU6IDk1JTsgfSB9XFxuXFxuaDEsXFxucCB7XFxuICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XFxuXFxuaDEge1xcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xcbiAgbGluZS1oZWlnaHQ6IDEuMjsgfVxcblxcbmJ1dHRvbiB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBtYXJnaW4tYm90dG9tOiAwLjI1cmVtO1xcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICAtbXMtdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XFxuICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XFxuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICBmb250LXNpemU6IDAuODc1cmVtO1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICB1c2VyLXNlbGVjdDogbm9uZTsgfVxcblxcbi53cmFwcGVyIHtcXG4gIG1pbi1oZWlnaHQ6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxcblxcbi5oZWFkZXIsXFxuLmZvb3RlciB7XFxuICBmbGV4LXNocmluazogMDsgfVxcblxcbm1haW4ge1xcbiAgZmxleC1ncm93OiAxOyB9XFxuXFxuLmhlYWRlciB7XFxuICBwYWRkaW5nOiAwIDEuODc1cmVtO1xcbiAgaGVpZ2h0OiA3LjVyZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJveC1zaGFkb3c6IDAgMnB4IDRweCAjZGRkZGRkOyB9XFxuICAuaGVhZGVyX19sb2dvIGltZyB7XFxuICAgIHdpZHRoOiA3LjVyZW07IH1cXG5cXG4uZm9vdGVyIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM3N0QzRUI7XFxuICBsaW5lLWhlaWdodDogMi41cmVtOyB9XFxuICAuZm9vdGVyX19jb3B5dGV4dCB7XFxuICAgIGZvbnQtc2l6ZTogMC44NzVyZW07IH1cXG5cXG4uY2FydCB7XFxuICBtYXgtd2lkdGg6IDM2LjI1cmVtO1xcbiAgbWFyZ2luOiAzcmVtIGF1dG87IH1cXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xcbiAgICAuY2FydCB7XFxuICAgICAgcGFkZGluZzogMXJlbTsgfSB9XFxuXFxuLnJvdyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7IH1cXG4gIC5yb3cudGgge1xcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzMzMzMzMztcXG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7IH1cXG4gIC5yb3ctZm9vdGVyIHtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XFxuICAucm93LWJ1eS1ub3cge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XFxuICAucm93LWJ1eS1ub3cgYnV0dG9uIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzc3RDNFQjtcXG4gICAgcGFkZGluZzogMC42MjVyZW0gMS4yNXJlbTtcXG4gICAgYm9yZGVyLXJhZGl1czogMS4yNXJlbTsgfVxcblxcbi5jb2wge1xcbiAgcGFkZGluZzogMC42MjVyZW0gMDtcXG4gIHdpZHRoOiAxMiU7XFxuICBvdmVyZmxvdzogaGlkZGVuOyB9XFxuICAuY29sLXBybyB7XFxuICAgIHdpZHRoOiAzMCU7IH1cXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XFxuICAgICAgLmNvbC1wcm8ge1xcbiAgICAgICAgd2lkdGg6IDIwJTsgfSB9XFxuICAuY29sLXRyYXNoIGltZyB7XFxuICAgIHdpZHRoOiAxLjEyNXJlbTtcXG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XFxuICAuY29sIGlucHV0IHtcXG4gICAgd2lkdGg6IDNyZW07IH1cXG5cIixcIioge1xcclxcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbn1cXHJcXG5cXHJcXG5odG1sLFxcclxcbmJvZHkge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XFxyXFxuICAgIGZvbnQtc2l6ZTogMTAwJTtcXHJcXG4gICAgZm9udC1mYW1pbHk6IFxcXCJSb2JvdG9cXFwiLCBzYW5zLXNlcmlmO1xcclxcbiAgICBAaW5jbHVkZSBtZWRpYS1xdWVyeShtb2JpbGUpe1xcclxcbiAgICAgICAgZm9udC1zaXplOiA5NSU7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXFxyXFxuaDEsXFxyXFxucCB7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IHJldHIoMTYpO1xcclxcbn1cXHJcXG5oMSB7XFxyXFxuICAgIGZvbnQtc2l6ZTogcmV0cigyOCk7XFxyXFxuICAgIGxpbmUtaGVpZ2h0OiAxLjI7XFxyXFxufVxcclxcblxcclxcbmJ1dHRvbiB7XFxyXFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogcmV0cig0KTtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcclxcbiAgICAtbXMtdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XFxyXFxuICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XFxyXFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xcclxcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcclxcbiAgICBmb250LXNpemU6IHJldHIoMTQpO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxyXFxuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxyXFxuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxyXFxuICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcXHJcXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbi53cmFwcGVyIHtcXHJcXG4gICAgbWluLWhlaWdodDogMTAwJTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuXFxyXFxuLmhlYWRlcixcXHJcXG4uZm9vdGVyIHtcXHJcXG4gICAgZmxleC1zaHJpbms6IDA7XFxyXFxufVxcclxcblxcclxcbm1haW4ge1xcclxcbiAgICBmbGV4LWdyb3c6IDE7XFxyXFxufVxcclxcblwiLFwiJHdoaXRlOiAjZjhmOGY4O1xcclxcbiRibGFjazogIzMzMzMzMztcXHJcXG4kZ3JleTogI2RkZGRkZDtcXHJcXG4kZGFyay1ncmV5OiAjZTJlMmUyO1xcclxcbiRibHVlOiAjNzdEM0VCO1wiLFwiJGJyZWFrcG9pbnQtbGc6IFxcXCIxMDI0cHhcXFwiO1xcclxcbiRicmVha3BvaW50LW1kOiBcXFwiNzY3cHhcXFwiO1xcclxcblxcclxcbi8vaXBob25lLVggYnJlYWsgcG9pbnRzXFxyXFxuJGJyZWFrcG9pbnQtbWluLWlwaG9uZXg6IDM3NXB4O1xcclxcbiRicmVha3BvaW50LW1heC1pcGhvbmV4OiA4MTJweDtcXHJcXG5cXHJcXG5AbWl4aW4gbWVkaWEtcXVlcnkoJHBvaW50KSB7XFxyXFxuICAgIEBpZiAkcG9pbnQ9PWRlc2t0b3Age1xcclxcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICRicmVha3BvaW50LWxnKSB7XFxyXFxuICAgICAgICAgICAgQGNvbnRlbnQ7XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH0gQGVsc2UgaWYgJHBvaW50PT1tb2JpbGUge1xcclxcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRicmVha3BvaW50LW1kKSB7XFxyXFxuICAgICAgICAgICAgQGNvbnRlbnQ7XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH0gQGVsc2UgaWYgJHBvaW50PT10YWJsZXQge1xcclxcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICRicmVha3BvaW50LW1kKSBhbmQgKG1heC13aWR0aDogJGJyZWFrcG9pbnQtbGcpIHtcXHJcXG4gICAgICAgICAgICBAY29udGVudDtcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAvL2JvdGggaXBob25lWCBwb3J0cmFpdCBhbmQgbGFuZHNjYXBlXFxyXFxuICAgIEBlbHNlIGlmICRwb2ludD09aXBob25leCB7XFxyXFxuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAkYnJlYWtwb2ludC1taW4taXBob25leCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAkYnJlYWtwb2ludC1tYXgtaXBob25leCkgYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpIHtcXHJcXG4gICAgICAgICAgICBAY29udGVudDtcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgfVxcclxcbiAgICAvL29ubHkgaXBob25lWCBsYW5kc2NhcGVcXHJcXG4gICAgQGVsc2UgaWYgJHBvaW50PT1pcGhvbmV4bGFuZHNjYXBlIHtcXHJcXG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6ICRicmVha3BvaW50LW1pbi1pcGhvbmV4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6ICRicmVha3BvaW50LW1heC1pcGhvbmV4KSBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMykgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XFxyXFxuICAgICAgICAgICAgQGNvbnRlbnQ7XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXCIsXCJAZnVuY3Rpb24gcmV0cigkc2l6ZSl7XFxyXFxuICAgICRyZW06ICRzaXplLzE2O1xcclxcbiAgICBAcmV0dXJuICN7JHJlbX1yZW07XFxyXFxufVwiLFwiLmhlYWRlciB7XFxyXFxuICAgIHBhZGRpbmc6IDAgcmV0cigzMCk7XFxyXFxuICAgIGhlaWdodDogcmV0cigxMjApO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBib3gtc2hhZG93OiAwIDJweCA0cHggJGdyZXk7XFxyXFxuICAgICZfX2xvZ28ge1xcclxcbiAgICAgICAgaW1nIHtcXHJcXG4gICAgICAgICAgICB3aWR0aDogcmV0cigxMjApO1xcclxcbiAgICAgICAgfVxcclxcbiAgICB9XFxyXFxufVxcclxcblwiLFwiLmZvb3RlciB7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XFxyXFxuICAgIGxpbmUtaGVpZ2h0OiByZXRyKDQwKTtcXHJcXG4gICAgJl9fY29weXRleHQge1xcclxcbiAgICAgICAgZm9udC1zaXplOiByZXRyKDE0KTtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG5cIixcIi5jYXJ0IHtcXHJcXG4gICAgbWF4LXdpZHRoOiByZXRyKDU4MCk7XFxyXFxuICAgIG1hcmdpbjogcmV0cig0OCkgYXV0bztcXHJcXG4gICAgQGluY2x1ZGUgbWVkaWEtcXVlcnkobW9iaWxlKXtcXHJcXG4gICAgICAgIHBhZGRpbmc6IHJldHIoMTYpO1xcclxcbiAgICB9XFxyXFxufVwiLFwiXFxyXFxuLnJvd3tcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxyXFxuICAgICYudGgge1xcclxcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRibGFjaztcXHJcXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcclxcbiAgICB9XFxyXFxuICAgICYtZm9vdGVye1xcclxcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgICB9XFxyXFxuICAgICYtYnV5LW5vd3tcXHJcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XFxyXFxuICAgIH1cXHJcXG4gICAgJi1idXktbm93IGJ1dHRvbntcXHJcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibHVlO1xcclxcbiAgICAgICAgcGFkZGluZzogcmV0cigxMCkgcmV0cigyMCk7XFxyXFxuICAgICAgICBib3JkZXItcmFkaXVzOiByZXRyKDIwKTtcXHJcXG4gICAgICAgIFxcclxcbiAgICB9XFxyXFxufVxcclxcblxcclxcbi5jb2wge1xcclxcbiAgICBwYWRkaW5nOiByZXRyKDEwKSAwO1xcclxcbiAgICB3aWR0aDogMTIlO1xcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgICAmLXByb3tcXHJcXG4gICAgICAgIHdpZHRoOiAzMCU7XFxyXFxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1xdWVyeShtb2JpbGUpe1xcclxcbiAgICAgICAgICAgIHdpZHRoOiAyMCU7XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH1cXHJcXG4gICAgJi10cmFzaCBpbWd7XFxyXFxuICAgICAgICB3aWR0aDogcmV0cigxOCk7XFxyXFxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIH1cXHJcXG4gICAgaW5wdXR7XFxyXFxuICAgICAgICB3aWR0aDogcmV0cig0OCk7XFxyXFxuICAgICAgICBcXHJcXG4gICAgfVxcclxcbn1cIl19XSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIntcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gbW9kdWxlc1tfaV07IC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcbiAgICAgIC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG4gICAgICAvLyB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG4gICAgICAvLyBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cbiAgICAgIGlmIChpdGVtWzBdID09IG51bGwgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgaWYgKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiKFwiLmNvbmNhdChpdGVtWzJdLCBcIikgYW5kIChcIikuY29uY2F0KG1lZGlhUXVlcnksIFwiKVwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290KS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0LCBwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCl7XG4gICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gIH1cbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQsIHBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0LCBwYXJlbnQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEF0LmJlZm9yZSwgdGFyZ2V0KTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRpZihvcHRpb25zLmF0dHJzLm5vbmNlID09PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuXHRcdGlmIChub25jZSkge1xuXHRcdFx0b3B0aW9ucy5hdHRycy5ub25jZSA9IG5vbmNlO1xuXHRcdH1cblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGdldE5vbmNlKCkge1xuXHRpZiAodHlwZW9mIF9fd2VicGFja19ub25jZV9fID09PSAndW5kZWZpbmVkJykge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIF9fd2VicGFja19ub25jZV9fO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdCA/IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpIFxuXHRcdCA6IG9wdGlvbnMudHJhbnNmb3JtLmRlZmF1bHQob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsImltcG9ydCBUcmFzaENhbiBmcm9tICcuLi9pbWcvdHJhc2gtaWNvbi5wbmcnXHJcblxyXG5jb25zdCBwcm9kdWN0VGFibGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvZHVjdC10YWJsZS1mb290ZXInKTtcclxuY29uc3QgdXJsID0gcmVxdWlyZSgnLi4vaW5wdXQuanNvbicpO1xyXG5cclxuZnVuY3Rpb24gRmV0Y2hUYWJsZURhdGEoanNvbikge1xyXG4gICAgbGV0IGRhdGEgPSBqc29uLmNvbmZpZztcclxuICAgIGRhdGEuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICBiaW5kRGF0YUludG9UZW1wbGF0ZShlbGVtZW50KVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGJpbmREYXRhSW50b1RlbXBsYXRlKHByb2R1Y3QpIHtcclxuICAgIGxldCB0ZW1wbGF0ZSA9IGBcclxuICAgIDxkaXYgY2xhc3M9XCJsYXlvdXQtaW5saW5lIHJvdyBqcy1pdGVtLXJvd1wiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wgY29sLXByb1wiPlxyXG4gICAgICAgICAgICA8cCBjbGFzcz1cImpzLWl0ZW1cIj4ke3Byb2R1Y3QubmFtZX08L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbCBjb2wtcHJpY2UgY29sLW51bWVyaWMgYWxpZ24tY2VudGVyIFwiPlxyXG4gICAgICAgICAgICA8cD7CozxzcGFuIGNsYXNzPVwianMtY29zdC1pblwiPiR7cHJvZHVjdC5wcmljZX08L3NwYW4+PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wgY29sLXF0eVwiPlxyXG4gICAgICAgIDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgdmFsdWU9JHtwcm9kdWN0LnF0eX0gbmFtZT1cInF1YW50aXR5XCIgbWluPVwiMVwiIG1heD1cIjEwXCIgY2xhc3M9XCJqcy1pbnB1dC12YWx1ZVwiPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwianMtcGx1c1wiPis8L2J1dHRvbj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImpzLW1pbnVzXCI+LTwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wgY29sLW5ldFwiPlxyXG4gICAgICAgICAgICA8cD7CozxzcGFuIGNsYXNzPVwianMtY29zdC1maW5hbFwiPjEuOTk8L3NwYW4+PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wgY29sLXRyYXNoXCI+XHJcbiAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJqcy10cmFzaFwiIHNyYz0ke1RyYXNoQ2FufSBhbHQ9XCJkZWxldGUtcHJvZHVjdFwiIC8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5gO1xyXG5cclxuICAgIHByb2R1Y3RUYWJsZS5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmViZWdpblwiLCB0ZW1wbGF0ZSk7XHJcbn1cclxuXHJcbkZldGNoVGFibGVEYXRhKHVybCk7IiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNGQ5YTcxMGVjOWZiZDY3NjhhMmJiOTBlN2QzZjljMzMucG5nXCI7IiwibGV0IHRvdGFsQ291bnQgPSAwLFxyXG4gICAgaXRlbXNJbkFycmF5ID0gW10sXHJcbiAgICBpdGVtc09iaiA9IHt9LFxyXG4gICAgZmluYWxBcnJheSA9W107XHJcblxyXG5jb25zdCBwcm9kdWN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9kdWN0LXRhYmxlJyk7XHJcbmNvbnN0IGJ1eU5vdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5qcy1idXknKTtcclxuXHJcblxyXG5jb25zdCBhZGRNaW51cyA9IChldmVudCwgdmFsdWUpID0+IHtcclxuICAgIGxldCAkb2JqZWN0RWxlbSA9ICQoZXZlbnQpLnBhcmVudHMoJy5qcy1pdGVtLXJvdycpLFxyXG4gICAgICAgIG9iZWpJdGVtID0gJG9iamVjdEVsZW0uZmluZCgnLmpzLWl0ZW0nKS50ZXh0KCksXHJcbiAgICAgICAgdG90YWxWYWx1ZSA9IChwYXJzZUZsb2F0KCRvYmplY3RFbGVtLmZpbmQoJy5qcy1jb3N0LWluJykudGV4dCgpKSAqIHZhbHVlKS50b0ZpeGVkKDIpIDtcclxuICAgICRvYmplY3RFbGVtLmZpbmQoJy5qcy1jb3N0LWZpbmFsJykudGV4dCh0b3RhbFZhbHVlKTtcclxuICAgIGl0ZW1zT2JqW29iZWpJdGVtXSA9IHZhbHVlO1xyXG4gICAgT2JqZWN0LmtleXMoaXRlbXNPYmopLmZvckVhY2goZnVuY3Rpb24gKGluZGV4LCB2YWx1ZSkge1xyXG4gICAgICAgIGxldCBpdGVtVG9QdXNoID0ge307XHJcbiAgICAgICAgaXRlbVRvUHVzaFtpbmRleF0gPSBpdGVtc09ialtpbmRleF1cclxuICAgICAgICBpdGVtc0luQXJyYXkucHVzaChpdGVtVG9QdXNoKTtcclxuICAgIH0pXHJcblxyXG4gICAgZmluYWxBcnJheSA9IEFycmF5LmZyb20oaXRlbXNJbkFycmF5KTtcclxuICAgIGl0ZW1zSW5BcnJheSA9IFtdO1xyXG59XHJcblxyXG5jb25zdCB1cGRhdGVUb3RhbHMgPSAoKSA9PiB7XHJcbiAgICBsZXQgaXRlbXNDb3N0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmpzLWNvc3QtZmluYWwnKTtcclxuICAgIGxldCBzdWJUb3RhbFRleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3VidG90YWwtYW10Jyk7XHJcbiAgICBsZXQgdmF0VGV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy52YXQtYW10Jyk7XHJcbiAgICBsZXQgdG90YWxUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvdGFsLWFtdCcpO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKGl0ZW1zQ29zdCk7XHJcbiAgICBsZXQgc3VtID0gMDtcclxuICAgIFsuLi5pdGVtc0Nvc3RdLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgc3VtICs9IHBhcnNlRmxvYXQoaXRlbS5pbm5lckhUTUwpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgc3ViVG90YWxUZXh0LmlubmVySFRNTCA9IChwYXJzZUZsb2F0KHN1bSkpLnRvRml4ZWQoMik7XHJcbiAgICB2YXRUZXh0LmlubmVySFRNTCA9IChwYXJzZUZsb2F0KHN1bSkgKiAwLjIpLnRvRml4ZWQoMik7XHJcbiAgICB0b3RhbFRleHQuaW5uZXJIVE1MID0gKHBhcnNlRmxvYXQoc3ViVG90YWxUZXh0LmlubmVySFRNTCkrcGFyc2VGbG9hdCh2YXRUZXh0LmlubmVySFRNTCkpLnRvRml4ZWQoMik7XHJcbn1cclxuY29uc3QgY29tbW9uRnVuY3Rpb24gPSAodGFyZ2V0LHZhbHVlKSA9PiB7XHJcbiAgICBpZih2YWx1ZSA8IDApIHtcclxuICAgICAgICAkKHRhcmdldCkucGFyZW50cygnLmpzLWl0ZW0tcm93JykuZmluZCgnLmpzLWlucHV0LXZhbHVlJykudmFsKDApO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgaWYodmFsdWUgPjEwKSB7XHJcbiAgICAgICAgICAgICQodGFyZ2V0KS5wYXJlbnRzKCcuanMtaXRlbS1yb3cnKS5maW5kKCcuanMtaW5wdXQtdmFsdWUnKS52YWwoMTApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGFkZE1pbnVzKHRhcmdldCwkKHRhcmdldCkucGFyZW50cygnLmpzLWl0ZW0tcm93JykuZmluZCgnLmpzLWlucHV0LXZhbHVlJykudmFsKCkpO1xyXG4gICAgdXBkYXRlVG90YWxzKCk7XHJcbiAgICBcclxuICAgIFxyXG59XHJcblxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vZXZlbnQgZGVsZWdhdGlvbiBKUVVFUlkgc3R5bGVcclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5qcy1taW51cycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBsZXQgJG9iamVjdEVsZW0gPSAkKGUuY3VycmVudFRhcmdldCkucGFyZW50cygnLmpzLWl0ZW0tcm93JyksXHJcbiAgICAgICAgJGlucHV0RWxlbSA9ICRvYmplY3RFbGVtLmZpbmQoJy5qcy1pbnB1dC12YWx1ZScpO1xyXG4gICAgJGlucHV0RWxlbS52YWwocGFyc2VJbnQoJGlucHV0RWxlbS52YWwoKSkgLSAxKTtcclxuICAgIGNvbW1vbkZ1bmN0aW9uKGUuY3VycmVudFRhcmdldCwgcGFyc2VJbnQoJGlucHV0RWxlbS52YWwoKSkpO1xyXG4gICAgXHJcbn0pO1xyXG5cclxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5qcy1wbHVzJywgZnVuY3Rpb24gKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGxldCAkb2JqZWN0RWxlbSA9ICQoZS5jdXJyZW50VGFyZ2V0KS5wYXJlbnRzKCcuanMtaXRlbS1yb3cnKSxcclxuICAgICAgICAkaW5wdXRFbGVtID0gJG9iamVjdEVsZW0uZmluZCgnLmpzLWlucHV0LXZhbHVlJyk7XHJcbiAgICAkaW5wdXRFbGVtLnZhbChwYXJzZUludCgkaW5wdXRFbGVtLnZhbCgpKSArIDEpO1xyXG4gICAgY29tbW9uRnVuY3Rpb24oZS5jdXJyZW50VGFyZ2V0LCBwYXJzZUludCgkaW5wdXRFbGVtLnZhbCgpKSk7XHJcbiAgICBcclxufSk7XHJcblxyXG4kKGRvY3VtZW50KS5vbignY2hhbmdlJywgJy5qcy1pbnB1dC12YWx1ZScsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBpZiAoJChlLmN1cnJlbnRUYXJnZXQpLnZhbCgpKSB7XHJcbiAgICAgICAgY29tbW9uRnVuY3Rpb24oZS5jdXJyZW50VGFyZ2V0LCBwYXJzZUludCgkKGUuY3VycmVudFRhcmdldCkudmFsKCkpKTtcclxuICAgIH1cclxuXHJcbn0pXHJcblxyXG5cclxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vL2V2ZW50IGRlbGVnYXRpb24gLSBWQU5JTExBIEpTIHN0eWxlXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbnByb2R1Y3RzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICBpZiAoIWV2ZW50LnRhcmdldC5tYXRjaGVzKCcuanMtdHJhc2gnKSkgcmV0dXJuO1xyXG4gICAgbGV0IHJvdyA9IGV2ZW50LnRhcmdldC5wYXJlbnROb2RlLnBhcmVudE5vZGU7XHJcbiAgICByb3cucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChyb3cpO1xyXG4gICAgaWYoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmpzLWl0ZW0tcm93JykubGVuZ3RoIDwgMSkge1xyXG4gICAgICAgIGJ1eU5vdy5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywnZGlzYWJsZWQnKTtcclxuICAgIH1cclxuICAgIHVwZGF0ZVRvdGFscygpO1xyXG59LCBmYWxzZSk7XHJcbmJ1eU5vdy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsZnVuY3Rpb24oZXZlbnQpe1xyXG5cclxuJC5hamF4KHtcclxuICAgIHR5cGU6J1BPU1QnLFxyXG4gICAgdXJsOicjJyxcclxuICAgIGRhdGE6ZmluYWxBcnJheSxcclxuICAgIGRhdGFUeXBlOidqc29uJyxcclxuICAgIHN1Y2Nlc3M6ZnVuY3Rpb24ocmVzdWx0RGF0YSkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdkYXRhIHBvc3RlZCcrIHJlc3VsdERhdGEpO1xyXG4gICAgfSxcclxuICAgIGVycm9yOmZ1bmN0aW9uKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yIGlzc3VlJytlcnJvci5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdkYXRhIHBvc3RlZCcrIGZpbmFsQXJyYXkpO1xyXG4gICAgfVxyXG59KVxyXG59LGZhbHNlKTtcclxuXHJcbmV4cG9ydCB7dXBkYXRlVG90YWxzLCBhZGRNaW51c307Il0sInNvdXJjZVJvb3QiOiIifQ==