!function(n){var e={};function r(t){if(e[t])return e[t].exports;var o=e[t]={i:t,l:!1,exports:{}};return n[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=n,r.c=e,r.d=function(n,e,t){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)r.d(t,o,function(e){return n[e]}.bind(null,o));return t},r.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="",r(r.s=0)}([function(n,e,r){"use strict";r(1),r(6),r(8)},function(n,e,r){var t=r(2);"string"==typeof t&&(t=[[n.i,t,""]]);var o={sourceMap:!0,hmr:!0,transform:void 0,insertInto:void 0};r(4)(t,o);t.locals&&(n.exports=t.locals)},function(n,e,r){(n.exports=r(3)(!0)).push([n.i,"/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\nol, ul {\n  list-style: none; }\n\nblockquote, q {\n  quotes: none; }\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n* {\n  box-sizing: border-box; }\n\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n  background-color: #f8f8f8;\n  font-family: \"Roboto\", sans-serif; }\n\nh1,\np {\n  margin-bottom: 1rem; }\n\nh1 {\n  font-size: 1.75rem;\n  line-height: 1.2; }\n\nbutton {\n  display: inline-block;\n  margin-bottom: 0;\n  font-weight: normal;\n  text-align: center;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: pointer;\n  background-image: none;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  font-size: 0.875rem;\n  border-radius: 4px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n.wrapper {\n  min-height: 100%;\n  display: flex;\n  flex-direction: column; }\n\n.header,\n.footer {\n  flex-shrink: 0; }\n\nmain {\n  flex-grow: 1; }\n\n.header {\n  padding: 0 1.875rem;\n  height: 7.5rem;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 2px 4px #dddddd; }\n  .header__logo img {\n    width: 7.5rem; }\n\n.footer {\n  text-align: center;\n  background-color: #77D3EB;\n  line-height: 2.5rem; }\n  .footer__copytext {\n    font-size: 0.875rem; }\n\n.cart {\n  max-width: 36.25rem;\n  margin: 3rem auto; }\n\n.row {\n  display: flex;\n  justify-content: space-around; }\n  .row.th {\n    border-bottom: 1px solid #333333;\n    text-transform: capitalize; }\n  .row-footer {\n    justify-content: space-between; }\n  .row-buy-now {\n    justify-content: flex-end; }\n  .row-buy-now button {\n    background-color: #77D3EB;\n    padding: 0.625rem 1.25rem;\n    border-radius: 1.25rem; }\n\n.col {\n  padding: 0.625rem 0;\n  width: 10%;\n  overflow: hidden; }\n  .col-pro {\n    width: 30%; }\n  .col-trash img {\n    width: 1.125rem;\n    cursor: pointer; }\n  .col input {\n    width: 3rem; }\n","",{version:3,sources:["C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/modules/_reset.scss","main.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/modules/_defaults.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/modules/_colors.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/mixins/_functions.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/components/_header.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/components/_footer.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/components/_cart.scss","C:/Users/ROMAHAJA/Desktop/rohan/projects/Assigments/shopping-cart-ui/src/styles/components/_table.scss"],names:[],mappings:"AAAA;;;CCGC;ADED;;;;;;;;;;;;;EAaC,SAAS;EACT,UAAU;EACV,SAAS;EACT,eAAe;EACf,aAAa;EACb,wBAAwB,EAAA;;AAEzB,gDAAA;AACA;;EAEC,cAAc,EAAA;;AAEf;EACC,cAAc,EAAA;;AAEf;EACC,gBAAgB,EAAA;;AAEjB;EACC,YAAY,EAAA;;AAEb;;EAEC,WAAW;EACX,aAAa,EAAA;;AAEd;EACC,yBAAyB;EACzB,iBAAiB,EAAA;;AE9ClB;EACI,sBAAsB,EAAA;;AAG1B;;EAEI,WAAW;EACX,YAAY;EACZ,yBCRW;EDSX,iCAAiC,EAAA;;AAGrC;;EAEI,mBEZqB,EAAA;;AFczB;EACI,kBEfqB;EFgBrB,gBAAgB,EAAA;;AAGpB;EACI,qBAAqB;EACrB,gBAAgB;EAChB,mBAAmB;EACnB,kBAAkB;EAClB,sBAAsB;EACtB,8BAA8B;EAC9B,0BAA0B;EAC1B,eAAe;EACf,sBAAsB;EACtB,6BAA6B;EAC7B,mBAAmB;EACnB,mBE/BqB;EFgCrB,kBAAkB;EAClB,yBAAyB;EACzB,sBAAsB;EACtB,qBAAqB;EACrB,iBAAiB,EAAA;;AAGrB;EACI,gBAAgB;EAChB,aAAa;EACb,sBAAsB,EAAA;;AAG1B;;EAEI,cAAc,EAAA;;AAGlB;EACI,YAAY,EAAA;;AGrDhB;EACI,mBDCqB;ECArB,cDAqB;ECCrB,aAAa;EACb,mBAAmB;EACnB,6BFHU,EAAA;EEIT;IAEO,aDNa,EAAA;;AEFzB;EACI,kBAAkB;EAClB,yBHEU;EGDV,mBFDqB,EAAA;EEErB;IACI,mBFHiB,EAAA;;AGFzB;EACI,mBHCqB;EGArB,iBAAqB,EAAA;;ACDzB;EACI,aAAa;EACb,6BAA6B,EAAA;EAFjC;IAIQ,gCLJO;IKKP,0BAA0B,EAAA;EAE9B;IACI,8BAA8B,EAAA;EAElC;IACI,yBAAyB,EAAA;EAE7B;IACI,yBLXM;IKYN,yBJdiB;IIejB,sBJfiB,EAAA;;AIoBzB;EACI,mBAAmB;EACnB,UAAU;EACV,gBAAgB,EAAA;EAChB;IACI,UAAU,EAAA;EAEd;IACI,eJ5BiB;II6BjB,eAAe,EAAA;EATvB;IAYQ,WJhCiB,EAAA",file:"main.scss",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}","/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; }\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block; }\n\nbody {\n  line-height: 1; }\n\nol, ul {\n  list-style: none; }\n\nblockquote, q {\n  quotes: none; }\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n* {\n  box-sizing: border-box; }\n\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n  background-color: #f8f8f8;\n  font-family: \"Roboto\", sans-serif; }\n\nh1,\np {\n  margin-bottom: 1rem; }\n\nh1 {\n  font-size: 1.75rem;\n  line-height: 1.2; }\n\nbutton {\n  display: inline-block;\n  margin-bottom: 0;\n  font-weight: normal;\n  text-align: center;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: pointer;\n  background-image: none;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  font-size: 0.875rem;\n  border-radius: 4px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n.wrapper {\n  min-height: 100%;\n  display: flex;\n  flex-direction: column; }\n\n.header,\n.footer {\n  flex-shrink: 0; }\n\nmain {\n  flex-grow: 1; }\n\n.header {\n  padding: 0 1.875rem;\n  height: 7.5rem;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 2px 4px #dddddd; }\n  .header__logo img {\n    width: 7.5rem; }\n\n.footer {\n  text-align: center;\n  background-color: #77D3EB;\n  line-height: 2.5rem; }\n  .footer__copytext {\n    font-size: 0.875rem; }\n\n.cart {\n  max-width: 36.25rem;\n  margin: 3rem auto; }\n\n.row {\n  display: flex;\n  justify-content: space-around; }\n  .row.th {\n    border-bottom: 1px solid #333333;\n    text-transform: capitalize; }\n  .row-footer {\n    justify-content: space-between; }\n  .row-buy-now {\n    justify-content: flex-end; }\n  .row-buy-now button {\n    background-color: #77D3EB;\n    padding: 0.625rem 1.25rem;\n    border-radius: 1.25rem; }\n\n.col {\n  padding: 0.625rem 0;\n  width: 10%;\n  overflow: hidden; }\n  .col-pro {\n    width: 30%; }\n  .col-trash img {\n    width: 1.125rem;\n    cursor: pointer; }\n  .col input {\n    width: 3rem; }\n",'* {\r\n    box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: $white;\r\n    font-family: "Roboto", sans-serif;\r\n}\r\n\r\nh1,\r\np {\r\n    margin-bottom: retr(16);\r\n}\r\nh1 {\r\n    font-size: retr(28);\r\n    line-height: 1.2;\r\n}\r\n\r\nbutton {\r\n    display: inline-block;\r\n    margin-bottom: 0;\r\n    font-weight: normal;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n    -ms-touch-action: manipulation;\r\n    touch-action: manipulation;\r\n    cursor: pointer;\r\n    background-image: none;\r\n    border: 1px solid transparent;\r\n    white-space: nowrap;\r\n    font-size: retr(14);\r\n    border-radius: 4px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n}\r\n\r\n.wrapper {\r\n    min-height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.header,\r\n.footer {\r\n    flex-shrink: 0;\r\n}\r\n\r\nmain {\r\n    flex-grow: 1;\r\n}\r\n',"$white: #f8f8f8;\r\n$black: #333333;\r\n$grey: #dddddd;\r\n$dark-grey: #e2e2e2;\r\n$blue: #77D3EB;","@function retr($size){\r\n    $rem: $size/16;\r\n    @return #{$rem}rem;\r\n}",".header {\r\n    padding: 0 retr(30);\r\n    height: retr(120);\r\n    display: flex;\r\n    align-items: center;\r\n    box-shadow: 0 2px 4px $grey;\r\n    &__logo {\r\n        img {\r\n            width: retr(120);\r\n        }\r\n    }\r\n}\r\n",".footer {\r\n    text-align: center;\r\n    background-color: $blue;\r\n    line-height: retr(40);\r\n    &__copytext {\r\n        font-size: retr(14);\r\n    }\r\n}\r\n",".cart {\r\n    max-width: retr(580);\r\n    margin: retr(48) auto;\r\n}","\r\n.row{\r\n    display: flex;\r\n    justify-content: space-around;\r\n    &.th {\r\n        border-bottom: 1px solid $black;\r\n        text-transform: capitalize;\r\n    }\r\n    &-footer{\r\n        justify-content: space-between;\r\n    }\r\n    &-buy-now{\r\n        justify-content: flex-end;\r\n    }\r\n    &-buy-now button{\r\n        background-color: $blue;\r\n        padding: retr(10) retr(20);\r\n        border-radius: retr(20);\r\n        \r\n    }\r\n}\r\n\r\n.col {\r\n    padding: retr(10) 0;\r\n    width: 10%;\r\n    overflow: hidden;\r\n    &-pro{\r\n        width: 30%;\r\n    }\r\n    &-trash img{\r\n        width: retr(18);\r\n        cursor: pointer;\r\n    }\r\n    input{\r\n        width: retr(48);\r\n    }\r\n}"]}])},function(n,e,r){"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var r=function(n,e){var r=n[1]||"",t=n[3];if(!t)return r;if(e&&"function"==typeof btoa){var o=(s=t,a=btoa(unescape(encodeURIComponent(JSON.stringify(s)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),"/*# ".concat(c," */")),i=t.sources.map(function(n){return"/*# sourceURL=".concat(t.sourceRoot).concat(n," */")});return[r].concat(i).concat([o]).join("\n")}var s,a,c;return[r].join("\n")}(e,n);return e[2]?"@media ".concat(e[2],"{").concat(r,"}"):r}).join("")},e.i=function(n,r){"string"==typeof n&&(n=[[null,n,""]]);for(var t={},o=0;o<this.length;o++){var i=this[o][0];null!=i&&(t[i]=!0)}for(var s=0;s<n.length;s++){var a=n[s];null!=a[0]&&t[a[0]]||(r&&!a[2]?a[2]=r:r&&(a[2]="(".concat(a[2],") and (").concat(r,")")),e.push(a))}},e}},function(n,e,r){var t,o,i={},s=(t=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=t.apply(this,arguments)),o}),a=function(n){var e={};return function(n,r){if("function"==typeof n)return n();if(void 0===e[n]){var t=function(n,e){return e?e.querySelector(n):document.querySelector(n)}.call(this,n,r);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}}(),c=null,l=0,u=[],d=r(5);function A(n,e){for(var r=0;r<n.length;r++){var t=n[r],o=i[t.id];if(o){o.refs++;for(var s=0;s<o.parts.length;s++)o.parts[s](t.parts[s]);for(;s<t.parts.length;s++)o.parts.push(g(t.parts[s],e))}else{var a=[];for(s=0;s<t.parts.length;s++)a.push(g(t.parts[s],e));i[t.id]={id:t.id,refs:1,parts:a}}}}function f(n,e){for(var r=[],t={},o=0;o<n.length;o++){var i=n[o],s=e.base?i[0]+e.base:i[0],a={css:i[1],media:i[2],sourceMap:i[3]};t[s]?t[s].parts.push(a):r.push(t[s]={id:s,parts:[a]})}return r}function p(n,e){var r=a(n.insertInto);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var t=u[u.length-1];if("top"===n.insertAt)t?t.nextSibling?r.insertBefore(e,t.nextSibling):r.appendChild(e):r.insertBefore(e,r.firstChild),u.push(e);else if("bottom"===n.insertAt)r.appendChild(e);else{if("object"!=typeof n.insertAt||!n.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=a(n.insertAt.before,r);r.insertBefore(e,o)}}function m(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var e=u.indexOf(n);e>=0&&u.splice(e,1)}function h(n){var e=document.createElement("style");if(void 0===n.attrs.type&&(n.attrs.type="text/css"),void 0===n.attrs.nonce){var t=function(){0;return r.nc}();t&&(n.attrs.nonce=t)}return b(e,n.attrs),p(n,e),e}function b(n,e){Object.keys(e).forEach(function(r){n.setAttribute(r,e[r])})}function g(n,e){var r,t,o,i;if(e.transform&&n.css){if(!(i="function"==typeof e.transform?e.transform(n.css):e.transform.default(n.css)))return function(){};n.css=i}if(e.singleton){var s=l++;r=c||(c=h(e)),t=E.bind(null,r,s,!1),o=E.bind(null,r,s,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(r=function(n){var e=document.createElement("link");return void 0===n.attrs.type&&(n.attrs.type="text/css"),n.attrs.rel="stylesheet",b(e,n.attrs),p(n,e),e}(e),t=function(n,e,r){var t=r.css,o=r.sourceMap,i=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||i)&&(t=d(t));o&&(t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var s=new Blob([t],{type:"text/css"}),a=n.href;n.href=URL.createObjectURL(s),a&&URL.revokeObjectURL(a)}.bind(null,r,e),o=function(){m(r),r.href&&URL.revokeObjectURL(r.href)}):(r=h(e),t=function(n,e){var r=e.css,t=e.media;t&&n.setAttribute("media",t);if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}.bind(null,r),o=function(){m(r)});return t(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t(n=e)}else o()}}n.exports=function(n,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=s()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var r=f(n,e);return A(r,e),function(n){for(var t=[],o=0;o<r.length;o++){var s=r[o];(a=i[s.id]).refs--,t.push(a)}n&&A(f(n,e),e);for(o=0;o<t.length;o++){var a;if(0===(a=t[o]).refs){for(var c=0;c<a.parts.length;c++)a.parts[c]();delete i[a.id]}}}};var B,y=(B=[],function(n,e){return B[n]=e,B.filter(Boolean).join("\n")});function E(n,e,r,t){var o=r?"":t.css;if(n.styleSheet)n.styleSheet.cssText=y(e,o);else{var i=document.createTextNode(o),s=n.childNodes;s[e]&&n.removeChild(s[e]),s.length?n.insertBefore(i,s[e]):n.appendChild(i)}}},function(n,e){n.exports=function(n){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var r=e.protocol+"//"+e.host,t=r+e.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(n,e){var o,i=e.trim().replace(/^"(.*)"$/,function(n,e){return e}).replace(/^'(.*)'$/,function(n,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?n:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?r+i:t+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(n,e,r){"use strict";var t,o=r(7),i=(t=o)&&t.__esModule?t:{default:t};var s=document.getElementById("product-table-footer");!function(n){fetch(n).then(function(n){return n.json()}).then(function(n){n.config.forEach(function(n){var e,r;r='\n    <div class="layout-inline row js-item-row">\n        <div class="col col-pro">\n            <p class="js-item">'+(e=n).name+'</p>\n        </div>\n        <div class="col col-price col-numeric align-center ">\n            <p>£<span class="js-cost-in">'+e.price+'</span></p>\n        </div>\n        <div class="col col-qty">\n        <input type="text" value='+e.qty+' name="quantity" class="js-input-value">\n            <button class="js-plus">+</button>\n            <button class="js-minus">-</button>\n        </div>\n        <div class="col col-net">\n            <p>£<span class="js-cost-final">1.99</span></p>\n        </div>\n        <div class="col col-trash">\n            <img src='+i.default+' alt="delete-product" />\n        </div>\n    </div>',s.insertAdjacentHTML("beforebegin",r)})})}("http://www.mocky.io/v2/5d5452062f0000c127861561")},function(n,e,r){n.exports=r.p+"4d9a710ec9fbd6768a2bb90e7d3f9c33.png"},function(n,e,r){"use strict";var t=[],o={},i=function(n,e){var r=$(n).parents(".js-item-row"),i=r.find(".js-item").text(),s=parseFloat(r.find(".js-cost-in").text())*e;r.find(".js-cost-final").text(s),o[i]=e,Object.keys(o).forEach(function(n,e){var r={};r[n]=o[n],t.push(r)}),console.log(t),t=[]};$(document).on("click",".js-minus",function(n){n.preventDefault();var e=$(n.currentTarget).parents(".js-item-row").find(".js-input-value");e.val(parseInt(e.val())-1),i(n.currentTarget,parseInt(e.val()))}),$(document).on("click",".js-plus",function(n){n.preventDefault();var e=$(n.currentTarget).parents(".js-item-row").find(".js-input-value");e.val(parseInt(e.val())+1),i(n.currentTarget,parseInt(e.val()))}),$(document).on("keyup",".js-input-value",function(n){$(n.currentTarget).val()&&i(n.currentTarget,parseInt($(n.currentTarget).val()))})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,